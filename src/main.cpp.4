#include <Arduino.h>
#include <Adafruit_NeoPixel.h>
#include <Adafruit_Sensor.h>
#include <DHT.h>
#define PIN 27
#define NUMPIXELS 24
#define DHTPIN 25 // Digital pin connected to the DHT sensor
// Uncomment the type of sensor in use:
#define DHTTYPE DHT11 // DHT 11
//#define DHTTYPE    DHT22     // DHT 22 (AM2302)
//#define DHTTYPE    DHT21     // DHT 21 (AM2301)
int X = 0;
int currentTemp = 0;
int currentHumidity = 0;
const int lowerFreeze = 1;
const int lowerCold = 17;
const int lowerComfort = 19;
const int lowerWarm = 20;
const int lowerHot = 22;
const int upperHot = 100;
const int upperFreeze = lowerCold - 1;
const int upperCold = lowerComfort - 1;
const int upperComfort = lowerWarm - 1;
const int upperWarm = lowerHot - 1;
const int iHotColor = 16711680;
const int iWarmColor = 16757504;
const int iComfortColor = 65280;
const int iColdColor = 255;
const int iFreezeColor = 41727;
String lastState = "";
String currState = "";

DHT dht(DHTPIN, DHTTYPE);
// Create the object
Adafruit_NeoPixel pixels(NUMPIXELS, PIN, NEO_GRB + NEO_KHZ800);

String readDHTTemperature()
{
  // Sensor readings may also be up to 2 seconds 'old' (its a very slow sensor)
  // Read temperature as Celsius (the default)
  float t = dht.readTemperature();
  // Read temperature as Fahrenheit (isFahrenheit = true)
  // float t = dht.readTemperature(true);
  // Check if any reads failed and exit early (to try again).
  if (isnan(t))
  {
    Serial.println("Failed to read from DHT sensor!");
    return "--";
  }
  else
  {
    // Serial.println(t);
    return String(t);
  }
}

String readDHTHumidity()
{
  // Sensor readings may also be up to 2 seconds 'old' (its a very slow sensor)
  float h = dht.readHumidity();
  if (isnan(h))
  {
    Serial.println("Failed to read from DHT sensor!");
    return "--";
  }
  else
  {
    // Serial.println(h);
    return String(h);
  }
}

void setup()
{
  // Serial port for debugging purposes
  Serial.begin(115200);
  // put your setup code here, to run once:
  dht.begin();
  pixels.begin(); // start the object
  pixels.show();
  pixels.setBrightness(64);
  delay(5000);
  Serial.println("Started Monitoring...");
  Serial.println("------------------------");
}

void brightnessIncrease()
{
  for (int i = 5; i < 100; i++)
  {
    pixels.setBrightness(i);
    pixels.show();
    delay(20);
  }
}
void brightnessDecrease()
{
  for (int i = 100; i > 5; i--)
  {
    pixels.setBrightness(i);
    pixels.show();
    delay(20);
  }
}

void setLightTemp(int temp)
{
  int tempColor = 0;
  switch (currentTemp)
  {
  case lowerFreeze ... upperFreeze:
    // do something
    tempColor = iFreezeColor;

    Serial.println("Its freezing...");
    currState = "Freezing";
    break;
  case lowerCold ... upperCold:
    // do something
    tempColor = iColdColor;

    Serial.println("Its cold...");
    currState = "Cold";
    break;
  case lowerComfort ... upperComfort:
    // do something
    tempColor = iComfortColor;

    Serial.println("Its comfortable...");
    currState = "Comfortable";
    break;
  case lowerWarm ... upperWarm:
    // do something
    tempColor = iWarmColor;

    Serial.println("Its warm...");
    currState = "Warm";
    break;
  case lowerHot ... upperHot:
    // do something
    tempColor = iHotColor;

    Serial.println("Its hot...");
    currState = "Hot";
    break;
  }
  if (currState != lastState)
  {
    Serial.println("Temp range changed.");
    brightnessDecrease();
    pixels.fill(tempColor);
    // pixels.show();
    brightnessIncrease();
    brightnessDecrease();
    brightnessIncrease();
    lastState = currState;
  }
}

void loop()
{
  // pixels.fill(pixels.Color(0, X, 0));
  // pixels.show();
  // X = X + 1;
  //  put your main code here, to run repeatedly:
  currentHumidity = readDHTHumidity().toInt();
  currentTemp = readDHTTemperature().toInt();
  setLightTemp(currentTemp);
  Serial.print("Humidity: ");
  Serial.println(currentHumidity);
  Serial.print("Temperature: ");
  Serial.println(currentTemp);
  Serial.println("Waiting...");

  delay(10000);
}